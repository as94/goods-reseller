name: Push
on: [ push, pull_request ]

jobs:
  build-artifacts:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        

    - name: Build and Push Application
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/goods-reseller:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goods-reseller:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goods-reseller:buildcache,mode=max

    - name: Build and Push Migrator
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./migrator.dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/goods-reselle-migratorr:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goods-reseller-migrator:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goods-reseller-migrator:buildcache,mode=max

    - name: Build and Push Proxy
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./nginx.dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/goods-reselle-proxy:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goods-reseller-proxy:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/goods-reseller-proxy:buildcache,mode=max
