version: "3.9"

volumes:
  pg_volume:

services:
  web:
    container_name: web
    build: .
    depends_on:
      - migrator
    restart: always
    expose:
      - "5000"
    environment:
      DatabaseOptions__ConnectionString: "Host=database;Port=5432;Database=goodsreseller;Username=postgres;Password=qwe123;Pooling=false;Timeout=300;CommandTimeout=300;"
      TelegramApiOptions__ApiKey: ""
      TelegramApiOptions__Enabled: "false"
      HostOptions__DomainName: "https://happyboxy.ru"
    volumes:
      - $HOME/goodsreseller/wwwroot:/wwwroot/assets
  
  database:
    container_name: database
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwe123
      POSTGRES_DB: goodsreseller
    volumes:
      - $HOME/Desktop/PostgreSql-Snippets/infile:/infile
      - pg_volume:/var/lib/postgresql/data/
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "synchronous_commit=off"
      - "-c"
      - "wal_writer_delay=2000ms"
      - "-c"
      - "effective_cache_size=128MB"

  proxy:
    build:
      context: ./
      dockerfile: nginx.dockerfile
    depends_on:
      - web
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/
    links:
      - web

  migrator:
    container_name: migrator
    build:
      context: ./
      dockerfile: migrator.dockerfile
    depends_on:
      - database
    restart: on-failure
    environment:
      DatabaseOptions__ConnectionString: "Host=database;Port=5432;Database=goodsreseller;Username=postgres;Password=qwe123"
